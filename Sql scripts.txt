----- Credits view
CREATE VIEW vw_credits AS
SELECT
credits.id,
FORMAT(amount, 2) AS amount, 
credits.expiration AS creditExpiration,
DATE_FORMAT(credits.created_at, '%Y/%m/%d') AS creditCreated,
request_id,
hectares, 
cultivation_id, 
cultivations.description AS cultivation,
cultivations.short_desc AS shortCultivation,
docs_id,
status_id,
credit_status.description AS creditStatus,
REPLACE(credit_status.appText, '%%', credits.id) AS appText,
credit_status.colorHEX, 
datediff(credit_docs.expiration, now()) AS docsLife,
users.id AS user_id,
users.name AS cliente
FROM credits
JOIN credit_request ON credits.request_id=credit_request.id
JOIN credit_status ON credits.status_id=credit_status.id
JOIN cultivations ON credit_request.cultivation_id=cultivations.id
JOIN credit_docs ON credit_request.docs_id=credit_docs.id
JOIN users ON credit_request.user_id=users.id

----- Balance view
CREATE VIEW vw_credit_balance AS
SELECT
user_id,
CONCAT('$', FORMAT(SUM(amount), 2), ' MXN') AS balance
FROM credits
JOIN credit_request ON credits.request_id=credit_request.id
WHERE status_id IN(2, 3, 6)
GROUP BY user_id


CREATE VIEW vw_credits_ministry AS
select
user_id,
credit_ministry.credit_id,
credit_ministry.ministry_id,
ministry.description,
CONCAT('$', FORMAT(credit_ministry.amount, 2), ' MXN') AS amount,
CONCAT(hectares,'H - ', cultivations.short_desc) AS creditName
FROM credit_request
JOIN credits ON credit_request.id=credits.request_id
JOIN credit_ministry ON credits.id=credit_ministry.credit_id
JOIN ministry ON credit_ministry.ministry_id=ministry.id
JOIN cultivations ON credit_request.cultivation_id=cultivations.id
WHERE
status_id IN(2, 3, 6) AND
credit_ministry.status=1


CREATE VIEW vw_ministry_request AS
SELECT
users.id AS user_id,
DATE_FORMAT(ministry_orders.created_at, '%Y/%m/%d') AS created,
DATE_FORMAT(credits.expiration, '%Y/%m/%d') AS expiration,
CONCAT(hectares,'H - ', cultivations.short_desc) AS creditName,
REPLACE(ministry_status.appText, '%%', CONCAT('$', FORMAT((rent+ground+sowing+labors+harvest+diverse),2), ' MXN')) AS appText,
ministry_status.colorHEX,
(SELECT name FROM branchoffices WHERE id=users.branchoffice_id) AS branchoffice,
ministry_orders.ministry_id
FROM ministry_orders
JOIN ministry_status ON ministry_orders.status_id=ministry_status.id
JOIN credits ON credits.id=ministry_orders.credit_id
JOIN credit_request ON credit_request.id=credits.request_id
JOIN cultivations ON credit_request.cultivation_id=cultivations.id
JOIN ministry_cash_request ON ministry_orders.ministry_request_id=ministry_cash_request.id
JOIN users ON users.id=ministry_cash_request.user_id
WHERE ministry_orders.ministry_id=1

UNION

SELECT
users.id AS user_id,
DATE_FORMAT(ministry_orders.created_at, '%Y/%m/%d') AS created,
DATE_FORMAT(credits.expiration, '%Y/%m/%d') AS expiration,
CONCAT(hectares,'H - ', cultivations.short_desc) AS creditName,
REPLACE(ministry_status.appText, '%%', (phosphate+urea+ammonia)) AS appText,
ministry_status.colorHEX,
(SELECT name FROM branchoffices WHERE id=users.branchoffice_id) AS branchoffice,
ministry_orders.ministry_id
FROM ministry_orders
JOIN ministry_status ON ministry_orders.status_id=ministry_status.id
JOIN credits ON credits.id=ministry_orders.credit_id
JOIN credit_request ON credit_request.id=credits.request_id
JOIN cultivations ON credit_request.cultivation_id=cultivations.id
JOIN ministry_supplies_request ON ministry_orders.ministry_request_id=ministry_supplies_request.id
JOIN users ON users.id=ministry_supplies_request.user_id
WHERE ministry_orders.ministry_id=2


// trigger for credit ministrations
DELIMITER $$

CREATE TRIGGER CHK_Credit_Ministry_Amount BEFORE INSERT ON credit_ministry FOR EACH ROW
BEGIN
	SET @credit = (SELECT amount FROM credits WHERE id=NEW.credit_id AND status_id IN(2, 3, 6));
	SET @ministry = (SELECT SUM(amount) FROM credit_ministry WHERE credit_id=NEW.credit_id);
	
	IF (NEW.amount <= 0) THEN
		SIGNAL sqlstate '45001' set message_text = "Amount is less than 1";
	END IF; 
	IF (@credit <= 0 OR @credit IS NULL) THEN
		SIGNAL sqlstate '45001' set message_text = "Credit amount is less than 1 or has an incorrect status";
	END IF;
	IF (@credit < (@ministry + NEW.amount)) THEN
		SIGNAL sqlstate '45001' set message_text = "The sum of the ministry amounts is more than the credit";
	END IF;
END $$


DELIMITER $$

CREATE TRIGGER CHK_Ministry_Order BEFORE INSERT ON ministry_orders FOR EACH ROW
BEGIN
	SET @credit = (SELECT amount FROM credit_ministry WHERE ministry_id=NEW.ministry_id);
	SET @amount = 0;
	IF(@credit <= 0)
		THEN SIGNAL sqlstate '45001' set message_text = "credit ministry is 0 or NULL";
	ELSE
		CASE NEW.ministry_id
			WHEN 1 THEN SET @amount = (SELECT (rent+ground+sowing+labors+harvest+diverse) FROM ministry_cash_request WHERE id=NEW.ministry_request_id);
			WHEN 2 THEN SET @amount = 1;
			WHEN 3 THEN SET @amount = 1;
			WHEN 4 THEN SET @amount = 1;
			ELSE SET @amount = 0;
		END CASE;
		IF (@amount IS NULL OR @amount <= 0) THEN
			SIGNAL sqlstate '45001' set message_text = "Amount is less than 1";
		ELSEIF (@amount > @credit) THEN
			SIGNAL sqlstate '45001' set message_text = "The sum of the request amount is more than the ministry credit";
		END IF;	
	END IF;
END $$


/// Change collation's
SHOW VARIABLES LIKE 'character_set%';
SHOW VARIABLES LIKE 'collation%';
show table status

https://mathiasbynens.be/notes/mysql-utf8mb4#utf8-to-utf8mb4

ALTER DATABASE agroMaster CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;

ALTER TABLE ministry_cash_request CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

ALTER TABLE ministry_orders CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

ALTER TABLE ministry_status CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;