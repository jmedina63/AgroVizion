{"version": "2.0","name": "ngLaravel - Ionic Client App v1.0.1","subline": "Ionic Client App For ngLaravel CRUD ","username": "YEP TEMPLATE","created": "07/17/2016","website": "","update": "07/17/2016","update_today": true,"email": "info@yeptemplate.com","description": "","intro": "Thank you for purchasing ngLaravel. If you have any questions that are beyond the scope of this help file, please feel free to comment us via the comment or support section of Codecanyon.net.","button_1_text": "","button_2_text": "","button_3_text": "","button_1_url": "","button_2_url": "","button_3_url": "","sections": [{"title": "Installation","id": "installation","content": "<h4>\n\tWhat Really is Ionic?</h4>\n<div>\n\t<div>\n\t\t<a href=\"http://ionicframework.com/docs/overview/\">Ionic </a>is a front-end SDK for building cross-platform mobile apps. Built on top of Angular, Ionic also provides a platform for integrating services like push notifications and analytics.</div>\n\t<div>\n\t\t&nbsp;</div>\n\t<div>\n\t\tIonic is not an alternative option to Cordova, but instead a UI library to make a better Cordova project. Ionic can be compared to a framework like Bootstrap or Foundation but this time for Mobile and not Web.</div>\n\t<div>\n\t\t&nbsp;</div>\n\t<div>\n\t\tIn this tutorial which has a nice demo, we will make a mobile app using Ionic framework and Cordova. I will also explain how to build mobile apps with Phonegap app so we won&rsquo;t have to bother with installing Platform SDKs.</div>\n</div>\n<p>\t&nbsp;</p>\n<p>\t&nbsp;</p>\n<h4>\n\tWHAT YOU SHOULD KNOW</h4>\n<div>\n\tFortunately you just need to understand the basics of JavaScript and its popular library AngularJS. Ionic is completely made up of Angular directives and components and uses its popular ui router for SPA.</div>\n<div>\n\t&nbsp;</div>\n<div>\n\tCurrently, Ionic v1.3 &nbsp;works with Angular 1.x, but the <a href=\"http://ionicframework.com/docs/v2/\">Ionic 2 Alpha</a> that works with Angular 2 was announced.</div>\n<div>\n\t&nbsp;</div>\n<h4>\n\t&nbsp;</h4>\n<div>\n\t<h4>\n\t\tSetup Android Environment</h4>\n\t<ol>\n\t\t<li>\t\t\tInstall <strong>Java SE Runtime Environment &nbsp;7</strong> (If you installed version 8, you should remove it)</li>\n\t\t<li>\t\t\tInstall&nbsp;<strong>Java SE Development Kit 7</strong>&nbsp;(If you installed version 8, you should remove it)</li>\n\t\t<li>\t\t\tDownload and Install <strong>Android Studio 2.1</strong> - Please checked&nbsp;<strong>android_sdk </strong>&amp; <strong>android_virual_device</strong> during installation.</li>\n\t\t<li>\t\t\tConfig&nbsp;<strong>Environment Variable</strong> for android:</li>\n\t</ol>\n\t<pre class=\"plain\">\nANDROID_HOME =   F:\android_sdk\nJAVA_HOME    =   C:\Program Files\Java\jdk1.7.0_45\nPath         =   C:\Program Files\Java\jdk1.7.0_45\bin; %ANDROID_HOME%\platform-tools; %ANDROID_HOME%\tools</pre>\n\t<p>\t\t&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5. After Install Android Studio 2.1 open it and following <strong>wizard </strong>to download other requirement.</p>\n\t<p>\t\tNote: If you have problem in setup Environment check <a href=\"http://ionicframework.com/docs/guide/installation.html\">link</a></p>\n\t<h4>\n\t\t&nbsp;</h4>\n\t<h4>\n\t\tIonic Setup and Installation</h4>\n\t<ol>\n\t\t<li>\t\t\tInstall <a href=\"https://nodejs.org/\">Node.js</a> and npm CLI</li>\n\t\t<li>\t\t\tRun the following command after installing Node:</li>\n\t</ol>\n\t<pre class=\"plain\">\nnpm install -g cordova ionic</pre>\n\t<p>\t\t&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3. Now finish.</p>\n\t<div>\n\t\t&nbsp;</div>\n\t<div>\n\t\t&nbsp;</div>\n\t<h4>\n\t\tCreate Custom Project with Ionic</h4>\n\t<p>\t\tTo create project run command:</p>\n\t<pre class=\"plain\">\nSyntax:  ionic start {appname} {template}\nExample#&gt; ionic start sample blank</pre>\n</div>\n<p>\t&nbsp;</p>\n<p>\tTo config platform run command:</p>\n<pre class=\"plain\">\n<span style=\"font-family: Arial, Verdana, sans-serif;\">Syntax:    </span>ionic platform add {platform}\n\n##Example##\ncd sample-folder\nionic platform add ios\nionic platform add android</pre>\n<p>\t&nbsp;</p>\n<p>\tTo run web server to UI view:</p>\n<pre class=\"plain\">\nionic serve</pre>\n<p>\t&nbsp;</p>\n<p>\tTo run App on the device or emulator:</p>\n<pre class=\"plain\">\nSyntax: ionic run &lt;PLATFORM&gt; \n        ionic emulate &lt;PLATFORM&gt;\n\n##Example##\nionic run android</pre>\n<p>\t&nbsp;</p>\n<h4>\n\tCustomize your project</h4>\n<div>\n\tFine we have a good ionic app but then it is useless. We agreed on making a Todo app not a blank app so let us complete the deal.</div>\n<div>\n\tIonic is a basically a SPA web app, we need a master index.html though we don&rsquo;t need routes as the Todo app is just a one view app.</div>\n<div>\n\tWe should first update our app&rsquo;s www/index.html and www/js/app.js to make sure the structure looks like the one below.</div>\n<div>\n\t&nbsp;</div>\n<div>\n\tTo learn about ionic check <a href=\"https://scotch.io/tutorials/create-your-first-mobile-app-with-angularjs-and-ionic\">create-your-first-mobile-app-with-angularjs-and-ionic</a>&nbsp;article.</div>\n<div>\n\t&nbsp;</div>\n<div>\n\t&nbsp;</div>\n"},{"title": "Structure","id": "structure","content": "<h4>\n\tFolder structure of ngLaravel Client App:</h4>\n<pre class=\"plain\">\n├───hooks\n├───platforms // include files that related to iOS &amp; andoid\n├───plugins   // include cordova plugins that connect to OS\n├───resource  // include icon &amp; splash screen for your app\n├───scss      // include SASS style file of your project \n├───www       // include all page &amp; route and js that you should customize it.\n└───config.xml    //include name, description, id and version of your app\n</pre>\n<p>\t&nbsp;</p>\n<h4>\n\twww folder:</h4>\n<pre class=\"plain\">\n├───css   // include custom css that use in this project\n├───fonts\n│   └───RobotoDraft\n├───img  // include image that use in project\n├───js \n|   <span style=\"font-family: Arial, Verdana, sans-serif;\">├-----  app.js     // include name and dependancy that use in this project</span><span style=\"font-family: Arial, Verdana, sans-serif;\">\n</span>|   <span style=\"font-family: Arial, Verdana, sans-serif;\">└</span><span style=\"font-family: Arial, Verdana, sans-serif;\">----- </span>config.router.js  // include route &amp; basic configuration of plugin and module\n├───lib   // include 3-party plugin and library\n│   ├───angular-cache\n│   ├───angular-img-fallback\n.   .\n.   .\n│   └───underscore\n│  \n├───modules // we categories module by name\n│   ├───category\n│   │   ├───controllers\n│   │   ├───services\n│   │   └───views\n│   ├───ionic-feature\n.   .\n.   .\n├───shared  // include shared and common controllers, views, services\n|   ├───controllers\n|   ├───filters\n|   ├───services\n|   └───views\n└── index.html  // describe it in blew</pre>\n<p>\t&nbsp;</p>\n<p>\t&nbsp;</p>\n<h4>\n\tModules Strucure:</h4>\n<p>\tClient App module like ngLaravel web client has controllers, services, views. Service in web version is exactly the same service, but controllers and views changed.</p>\n<pre class=\"plain\">\n├───category              // include category module\n│   ├───controllers       // include category controllers that diffrent from ngLaravel web angularjs version\n│   ├───services          // include category services that is same ngLaravel web angularjs version\n│   └───views             // include category views that created by ionic component\n├───ionic-feature         // include ionic cordova/phonegap plugin\n│   ├───barcode           \n│   │   ├───controllers   // include functions to use barcode scanner\n│   │   └───views\n.   .\n.   .\n│   └───vibration\n│       ├───controllers\n│       └───views\n├───tag\n│   └───services\n├───task                   // like other modules\n│   ├───controllers       \n│   ├───services\n│   └───views\n└───user</pre>\n<p>\t&nbsp;</p>\n<h4>\n\tRoute:</h4>\n<p>\tIonic use ui-router to route page. to customize your route refer to www/js/config.route.js. This file is similar to&nbsp;ngLaravel web angularjs version.&nbsp;</p>\n<p>\t&nbsp;</p>\n<h4>\n\tSide ​Menu</h4>\n<p>\tTo change your side menu app refer to shared/views/admin.html</p>\n"},{"title": "Authorization","id": "authorization","content": "<h4>\n\t&nbsp;</h4>\n<p>\tWith&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; line-height: 21.76px; background-color: rgba(0, 0, 0, 0.0392157);\">ngAA</span>&nbsp;you can restrict state transition to only authenticated user using&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13.6px; line-height: 21.76px; background-color: rgba(0, 0, 0, 0.0392157);\">authenticated:true</span>&nbsp;state data. To ensure authenticity on state define it as below:</p>\n<pre class=\"js\">\n&#39;use strict&#39;;\nangular\n    .module(&#39;ng-laravel&#39;, [\n        &#39;ui.router&#39;,\n        &#39;ngAA&#39;\n    ])\n    .config(function($stateProvider, $urlRouterProvider, $authProvider) {\n        $stateProvider\n            .state(&#39;about&#39;, {\n                url: &#39;/about&#39;,\n                templateUrl: &#39;views/about.html&#39;,\n                controller: &#39;AboutCtrl&#39;,\n                data: {\n                    authenticated:true\n                }\n            });\n            ...\n    });</pre>\n<h4>\n\tPermits</h4>\n<p>\tngAA restrict state transition to only allowed user using permits state data. If there is no permits state data, ngAA wont protect the state. You should define your permits using one the following:</p>\n<div>\n\t&nbsp;</div>\n<h4>\n\twithOnly</h4>\n<div>\n\tWhich tells ngAA to allow user with only provided permission to access the state. To tell ngAA to permit user with only one permission in your state definition, you do as bellow:</div>\n<div>\n\t&nbsp;</div>\n<pre class=\"js\">\n&#39;use strict&#39;;\nangular\n    .module(&#39;ng-laravel&#39;, [\n        &#39;ui.router&#39;,\n        &#39;ngAA&#39;\n    ])\n    .config(function($stateProvider, $urlRouterProvider, $authProvider) {\n        $stateProvider\n            .state(&#39;about&#39;, {\n                url: &#39;/about&#39;,\n                templateUrl: &#39;views/about.html&#39;,\n                controller: &#39;AboutCtrl&#39;,\n                data: {\n                    permits: {\n                        withOnly: &#39;Post_delete&#39;\n                    }\n                }\n            });\n            ...\n    });</pre>\n<h4>\n\t&nbsp;</h4>\n<h4>\n\twithAll</h4>\n<div>\n\tWhich tells ngAA to allow user with all given permissions to access the state. To tell ngAA to permit user with all given permissions in your state definition, you do as bellow:</div>\n<pre class=\"js\">\n&#39;use strict&#39;;\nangular\n    .module(&#39;ngAPP&#39;, [\n        &#39;ui.router&#39;,\n        &#39;ngAA&#39;\n    ])\n    .config(function($stateProvider, $urlRouterProvider, $authProvider) {\n        $stateProvider\n            .state(&#39;about&#39;, {\n                url: &#39;/about&#39;,\n                templateUrl: &#39;views/about.html&#39;,\n                controller: &#39;AboutCtrl&#39;,\n                data: {\n                    permits: {\n                        withAll: [&#39;Post_delete&#39;,&#39;Post_create&#39;]\n                    }\n                }\n            });\n            ...\n    });</pre>\n<h4>\n\t&nbsp;</h4>\n<h4>\n\twithAny</h4>\n<div>\n\tWhich tells ngAA to allow user with any of the given permissions to access the state. To tell ngAA to permit user with any of the given permissions in your state definition, you do as bellow:</div>\n<div>\n\t&nbsp;</div>\n<pre class=\"js\">\n&#39;use strict&#39;;\nangular\n    .module(&#39;ngAPP&#39;, [\n        &#39;ui.router&#39;,\n        &#39;ngAA&#39;\n    ])\n    .config(function($stateProvider, $urlRouterProvider, $authProvider) {\n        $stateProvider\n            .state(&#39;about&#39;, {\n                url: &#39;/about&#39;,\n                templateUrl: &#39;views/about.html&#39;,\n                controller: &#39;AboutCtrl&#39;,\n                data: {\n                    permits: {\n                        withAny: [&#39;Post_delete&#39;,&#39;Comment_delete&#39;]\n                    }\n                }\n            });\n            ...\n    });</pre>\n<div>\n\t&nbsp;</div>\n<h4>\n\tDirectives</h4>\n<h5>\n\tsignout</h5>\n<div>\n\t&nbsp;</div>\n<div>\n\tngAA provide a signout directive which can be used in templates to signout the current sign-in user</div>\n<div>\n\t&nbsp;</div>\n<pre class=\"html\">\n&lt;li ng-show=&quot;isAuthenticated&quot;&gt;\n    &lt;a data-signout&gt;Signout&lt;/a&gt;\n&lt;/li&gt;</pre>\n<div>\n\t&nbsp;</div>\n<h5>\n\tshow-if-has-permit</h5>\n<div>\n\tngAA provide a show-if-has-permit directive which can be used in templates to show or hide HTML elements when current signed in user has a given permission.</div>\n<pre class=\"html\">\n&lt;li show-if-has-any-permit=&quot;edit_task&quot;&gt;\n    ...\n&lt;/li&gt;</pre>\n<div>\n\t&nbsp;</div>\n<h5>\n\tshow-if-has-permits</h5>\n<div>\n\tngAA provide a show-if-has-permits directive which can be used in templates to show or hide HTML elements when current signed in user has all of the provided permissions.</div>\n<pre class=\"html\">\n&lt;li show-if-has-permits=&quot;edit_task, add_task&quot;&gt;\n    ...\n&lt;/li&gt;</pre>\n<div>\n\t&nbsp;</div>\n<h5>\n\tshow-if-has-any-permit</h5>\n<div>\n\tngAA provide a show-if-has-any-permit directive which can be used in templates to show or hide HTML elements when current signed in user has any of the provided permissions.</div>\n<div>\n\t&nbsp;</div>\n<pre class=\"html\">\n&lt;li show-if-has-any-permits=&quot;view_task, add_comment&quot;&gt;\n    ...\n&lt;/li&gt;</pre>\n<p>\t&nbsp;</p>\n"},{"title": "Access To Back-End API","id": "access_to_back_end_api","content": "<h3>\n\tWellcome to Yep ngLaravel</h3>\n<p>\tThis is sample app to work with AngularJS and Laravel based on JSON Web Token Security. We integrate JWT security laravel back-end with angularjs front-end. Also you can just use Laravel back-end for your production like mobile app and etc. Now you can test my api with <b>Postman</b> RESTful client.</p>\n<h4>\n\tWhat&#39;s Postman?</h4>\n<p>\tPowerful tools to work, build, test and document your APIs easily and quickly.</p>\n<br>\n<h4>\n\tHow to Install Postman?</h4>\n<p>\tIn Google Chrome browser setting select <b>Extensions</b>. Click the <b>Get More Extensions</b> link on the page and search for Postman. Follow the directions to install the extension and Then go to url <code>chrome://apps/</code> run it.</p>\n<br>\n<br>\n<h4>\n\tCreate Token by authntication</h4>\n<p>\tEnter this url <code>http://188.40.252.106/ng-laravel/CURRENT_VERSION/Developer/laravel-backend/public/api/authenticate?email=yep@gmail.com&amp;password=123456</code> and copy and keep token to future requests.</p>\n<p>\tPlease note base url API is <code>http://188.40.252.106/ng-laravel/CURRENT_VERSION/Developer/laravel-backend/public/api/</code> and for authentication you should use <code>authenticate</code> and use <code>email</code> and <code>password</code> parameters.</p>\n<br>\n<br>\n<h4>\n\tHow to access to other API</h4>\n<p>\tTo access other API:<br>\n\t1.you should create token with above way and then copy token<br>\n\t2.Enter your route with token parameter like: <code>http://188.40.252.106/ng-laravel/CURRENT_VERSION/Developer/laravel-backend/public/api/user?token=YOUR_COPY_TOKEN</code><br>\n\t3.See result :)</p>\n<br>\n<h4>\n\tAll route in ngLaravel</h4>\n<pre>\n+--------+----------+----------------------------------+------------------------+----------------------------------------------------------+------------+\n| Domain | Method   | URI                              | Name                   | Action                                                   | Middleware |\n+--------+----------+----------------------------------+------------------------+----------------------------------------------------------+------------+\n|        | GET|HEAD | api/authenticate                 | api.authenticate.index | App\Http\Controllers\AuthenticateController@index        |            |\n|        | POST     | api/authenticate                 |                        | App\Http\Controllers\AuthenticateController@authenticate |            |\n|        | POST     | api/category                     | api.category.store     | App\Http\Controllers\CategoryController@store            | jwt.auth   |\n|        | GET|HEAD | api/category                     | api.category.index     | App\Http\Controllers\CategoryController@index            | jwt.auth   |\n|        | GET|HEAD | api/category/create              | api.category.create    | App\Http\Controllers\CategoryController@create           | jwt.auth   |\n|        | GET|HEAD | api/category/{category}          | api.category.show      | App\Http\Controllers\CategoryController@show             | jwt.auth   |\n|        | PUT      | api/category/{category}          | api.category.update    | App\Http\Controllers\CategoryController@update           | jwt.auth   |\n|        | DELETE   | api/category/{category}          | api.category.destroy   | App\Http\Controllers\CategoryController@destroy          | jwt.auth   |\n|        | PATCH    | api/category/{category}          |                        | App\Http\Controllers\CategoryController@update           | jwt.auth   |\n|        | GET|HEAD | api/category/{category}/edit     | api.category.edit      | App\Http\Controllers\CategoryController@edit             | jwt.auth   |\n|        | GET|HEAD | api/comment                      | api.comment.index      | App\Http\Controllers\CommentController@index             | jwt.auth   |\n|        | POST     | api/comment                      | api.comment.store      | App\Http\Controllers\CommentController@store             | jwt.auth   |\n|        | GET|HEAD | api/comment/create               | api.comment.create     | App\Http\Controllers\CommentController@create            | jwt.auth   |\n|        | GET|HEAD | api/comment/search               |                        | App\Http\Controllers\CommentController@search            | jwt.auth   |\n|        | PUT      | api/comment/{comment}            | api.comment.update     | App\Http\Controllers\CommentController@update            | jwt.auth   |\n|        | DELETE   | api/comment/{comment}            | api.comment.destroy    | App\Http\Controllers\CommentController@destroy           | jwt.auth   |\n|        | GET|HEAD | api/comment/{comment}            | api.comment.show       | App\Http\Controllers\CommentController@show              | jwt.auth   |\n|        | PATCH    | api/comment/{comment}            |                        | App\Http\Controllers\CommentController@update            | jwt.auth   |\n|        | GET|HEAD | api/comment/{comment}/edit       | api.comment.edit       | App\Http\Controllers\CommentController@edit              | jwt.auth   |\n|        | POST     | api/deleteimage/{id}             |                        | App\Http\Controllers\UploadController@deleteUpload       |            |\n|        | GET|HEAD | api/gallery                      | api.gallery.index      | App\Http\Controllers\GalleryController@index             | jwt.auth   |\n|        | POST     | api/gallery                      | api.gallery.store      | App\Http\Controllers\GalleryController@store             | jwt.auth   |\n|        | GET|HEAD | api/gallery/create               | api.gallery.create     | App\Http\Controllers\GalleryController@create            | jwt.auth   |\n|        | GET|HEAD | api/gallery/search               |                        | App\Http\Controllers\GalleryController@search            | jwt.auth   |\n|        | PATCH    | api/gallery/{gallery}            |                        | App\Http\Controllers\GalleryController@update            | jwt.auth   |\n|        | DELETE   | api/gallery/{gallery}            | api.gallery.destroy    | App\Http\Controllers\GalleryController@destroy           | jwt.auth   |\n|        | GET|HEAD | api/gallery/{gallery}            | api.gallery.show       | App\Http\Controllers\GalleryController@show              | jwt.auth   |\n|        | PUT      | api/gallery/{gallery}            | api.gallery.update     | App\Http\Controllers\GalleryController@update            | jwt.auth   |\n|        | GET|HEAD | api/gallery/{gallery}/edit       | api.gallery.edit       | App\Http\Controllers\GalleryController@edit              | jwt.auth   |\n|        | POST     | api/password/email               |                        | App\Http\Controllers\Auth\PasswordController@postEmail   |            |\n|        | POST     | api/password/reset               |                        | App\Http\Controllers\Auth\PasswordController@postReset   |            |\n|        | POST     | api/permission                   | api.permission.store   | App\Http\Controllers\PermissionController@store          | jwt.auth   |\n|        | GET|HEAD | api/permission                   | api.permission.index   | App\Http\Controllers\PermissionController@index          | jwt.auth   |\n|        | GET|HEAD | api/permission/create            | api.permission.create  | App\Http\Controllers\PermissionController@create         | jwt.auth   |\n|        | GET|HEAD | api/permission/search            |                        | App\Http\Controllers\PermissionController@search         | jwt.auth   |\n|        | DELETE   | api/permission/{permission}      | api.permission.destroy | App\Http\Controllers\PermissionController@destroy        | jwt.auth   |\n|        | PUT      | api/permission/{permission}      | api.permission.update  | App\Http\Controllers\PermissionController@update         | jwt.auth   |\n|        | PATCH    | api/permission/{permission}      |                        | App\Http\Controllers\PermissionController@update         | jwt.auth   |\n|        | GET|HEAD | api/permission/{permission}      | api.permission.show    | App\Http\Controllers\PermissionController@show           | jwt.auth   |\n|        | GET|HEAD | api/permission/{permission}/edit | api.permission.edit    | App\Http\Controllers\PermissionController@edit           | jwt.auth   |\n|        | POST     | api/role                         | api.role.store         | App\Http\Controllers\RoleController@store                | jwt.auth   |\n|        | GET|HEAD | api/role                         | api.role.index         | App\Http\Controllers\RoleController@index                | jwt.auth   |\n|        | GET|HEAD | api/role/create                  | api.role.create        | App\Http\Controllers\RoleController@create               | jwt.auth   |\n|        | GET|HEAD | api/role/search                  |                        | App\Http\Controllers\RoleController@search               | jwt.auth   |\n|        | DELETE   | api/role/{role}                  | api.role.destroy       | App\Http\Controllers\RoleController@destroy              | jwt.auth   |\n|        | PATCH    | api/role/{role}                  |                        | App\Http\Controllers\RoleController@update               | jwt.auth   |\n|        | PUT      | api/role/{role}                  | api.role.update        | App\Http\Controllers\RoleController@update               | jwt.auth   |\n|        | GET|HEAD | api/role/{role}                  | api.role.show          | App\Http\Controllers\RoleController@show                 | jwt.auth   |\n|        | GET|HEAD | api/role/{role}/edit             | api.role.edit          | App\Http\Controllers\RoleController@edit                 | jwt.auth   |\n|        | POST     | api/tag                          | api.tag.store          | App\Http\Controllers\TagController@store                 | jwt.auth   |\n|        | GET|HEAD | api/tag                          | api.tag.index          | App\Http\Controllers\TagController@index                 | jwt.auth   |\n|        | GET|HEAD | api/tag/create                   | api.tag.create         | App\Http\Controllers\TagController@create                | jwt.auth   |\n|        | GET|HEAD | api/tag/search                   |                        | App\Http\Controllers\TagController@search                | jwt.auth   |\n|        | DELETE   | api/tag/{tag}                    | api.tag.destroy        | App\Http\Controllers\TagController@destroy               | jwt.auth   |\n|        | PATCH    | api/tag/{tag}                    |                        | App\Http\Controllers\TagController@update                | jwt.auth   |\n|        | GET|HEAD | api/tag/{tag}                    | api.tag.show           | App\Http\Controllers\TagController@show                  | jwt.auth   |\n|        | PUT      | api/tag/{tag}                    | api.tag.update         | App\Http\Controllers\TagController@update                | jwt.auth   |\n|        | GET|HEAD | api/tag/{tag}/edit               | api.tag.edit           | App\Http\Controllers\TagController@edit                  | jwt.auth   |\n|        | GET|HEAD | api/task                         | api.task.index         | App\Http\Controllers\TaskController@index                | jwt.auth   |\n|        | POST     | api/task                         | api.task.store         | App\Http\Controllers\TaskController@store                | jwt.auth   |\n|        | GET|HEAD | api/task/create                  | api.task.create        | App\Http\Controllers\TaskController@create               | jwt.auth   |\n|        | GET|HEAD | api/task/search                  |                        | App\Http\Controllers\TaskController@search               | jwt.auth   |\n|        | PATCH    | api/task/{task}                  |                        | App\Http\Controllers\TaskController@update               | jwt.auth   |\n|        | DELETE   | api/task/{task}                  | api.task.destroy       | App\Http\Controllers\TaskController@destroy              | jwt.auth   |\n|        | GET|HEAD | api/task/{task}                  | api.task.show          | App\Http\Controllers\TaskController@show                 | jwt.auth   |\n|        | PUT      | api/task/{task}                  | api.task.update        | App\Http\Controllers\TaskController@update               | jwt.auth   |\n|        | GET|HEAD | api/task/{task}/edit             | api.task.edit          | App\Http\Controllers\TaskController@edit                 | jwt.auth   |\n|        | POST     | api/uploadimage                  |                        | App\Http\Controllers\UploadController@uploadimage        |            |\n|        | GET|HEAD | api/user                         | api.user.index         | App\Http\Controllers\UserController@index                | jwt.auth   |\n|        | POST     | api/user                         | api.user.store         | App\Http\Controllers\UserController@store                | jwt.auth   |\n|        | GET|HEAD | api/user/create                  | api.user.create        | App\Http\Controllers\UserController@create               | jwt.auth   |\n|        | GET|HEAD | api/user/search                  |                        | App\Http\Controllers\UserController@search               | jwt.auth   |\n|        | PUT      | api/user/{user}                  | api.user.update        | App\Http\Controllers\UserController@update               | jwt.auth   |\n|        | PATCH    | api/user/{user}                  |                        | App\Http\Controllers\UserController@update               | jwt.auth   |\n|        | GET|HEAD | api/user/{user}                  | api.user.show          | App\Http\Controllers\UserController@show                 | jwt.auth   |\n|        | DELETE   | api/user/{user}                  | api.user.destroy       | App\Http\Controllers\UserController@destroy              | jwt.auth   |\n|        | GET|HEAD | api/user/{user}/edit             | api.user.edit          | App\Http\Controllers\UserController@edit                 | jwt.auth   |\n+--------+----------+----------------------------------+------------------------+----------------------------------------------------------+------------+\n\n                                </pre>\n"},{"title": "Good Resource","id": "good_resource","content": "<p>\t<a href=\"https://scotch.io/tutorials/create-your-first-mobile-app-with-angularjs-and-ionic\">https://scotch.io/tutorials/create-your-first-mobile-app-with-angularjs-and-ionic</a></p>\n<p>\t<a href=\"http://ionicframework.com/docs/\">http://ionicframework.com/docs/</a></p>\n<p>\t&nbsp;</p>\n"},{"title": "Admin Template","id": "admin_template","content": "<p>\tTo access Yep Golabi Admin Template refer to [extract_zip_file]/Documention/Yep Golabi Admin Template/</p>\n"},{"title": "ngLaravel Web AngularJS","id": "nglaravel_web_angularjs","content": "<p>\tTo access Yep Golabi Admin Template refer to [extract_zip_file]/Documention/nglaravel/</p>\n"},{"title": "Updates","id": "updates","content": "<div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: Arial, verdana, arial, sans-serif; vertical-align: baseline; color: rgb(56, 56, 56);\">\n\t<div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">\n\t\t<div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">\n\t\t\t<div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">\n\t\t\t\tVersion 1.0.1</div>\n\t\t\t<ul style=\"padding-right: 0px; padding-left: 0px; margin: 18px 0px; border: 0px; outline: 0px; vertical-align: baseline; line-height: 1.5em;\">\n\t\t\t\t<li style=\"margin: 0px 0px 0px 36px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: square;\">\n\t\t\t\t\tReleased verison</li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: baseline;\">\n\t\t\t&nbsp;</div>\n\t</div>\n</div>\n<p>\t&nbsp;</p>\n"},{"title": "Credits","id": "credits","content": "<div>\n\tionic framework v1.3.1 - MIT License - http://ionicframework.com/</div>\n<div>\n\tIonic-Material v0.4.2 - MIT License - https://github.com/zachfitz/Ionic-Material</div>\n<div>\n\tngCordova v0.1.26-alpha - MIT License - http://ngcordova.com/</div>\n<div>\n\trestangular v1.5.2 - MIT License - https://github.com/mgonto/restangular</div>\n<div>\n\tngAA v0.3.0 - MIT License - https://github.com/lykmapipo/ngAA</div>\n<div>\n\tangular-jwt v0.0.9 - MIT License - https://github.com/auth0/angular-jwt</div>\n<div>\n\tngStorage v0.3.10 - MIT License - https://github.com/gsklee/ngStorage</div>\n<div>\n\tangular-cache v4.5.0 - MIT License - https://github.com/jmdobry/angular-cache</div>\n<div>\n\tionic-toast v0.3.0 - MIT License - https://github.com/rajeshwarpatlolla/ionic-toast</div>\n<div>\n\twaves v0.6.6 - MIT License - https://github.com/fians/Waves</div>\n<div>\n\tmomentjs v2.9.0 - MIT License - https://github.com/moment/moment</div>\n<div>\n\tangular-moment v0.9.0 - MIT License - https://github.com/urish/angular-moment</div>\n<div>\n\tion-autocomplete v0.3.2 - MIT license - https://github.com/guylabs/ion-autocomplete</div>\n<div>\n\tangular-img-fallback v0.2.0 - MIT License - https://github.com/dcohenb/angular-img-fallback</div>\n<div>\n\t&nbsp;</div>\n"}],"use_sub": false,"logo": "http://yeptemplate.com/doc/ng-laravel/logo-doc.jpg","favicon": "http://yeptemplate.com/doc/ng-laravel/favicon.ico","customcss": "","easing": "swing","easingduration": "500","bgimage": "","bgrepeat": "repeat","bgattachment": "scroll","bgcolor": "EEEEEE","textcolor": "383838","linkcolor": "008C9E","hrcolor1": "D4D4D4","hrcolor2": "FFFFFF","btncolor": "FFFFFF","btncolor1": "008C9E","btncolor2": "006673","sidebarbgimage": "","sidebarbgrepeat": "repeat","sidebarbgcolor": "343838","sidebartextcolor": "FFFFFF","sidebarlinkcolor": "FFFFFF","sidebaractivecolor": "333636","sidebaractivetextcolor": "00DFFC","sidebarhrcolor1": "212424","sidebarhrcolor2": "494F4F","cufon": "","documentationttype": "default","itemURL": "","sendJSON": "","sendZIP": "","sendPWD": "","cke_146_uiElement": false,"cke_149_uiElement": false,"cke_153_uiElement": false,"cke_156_uiElement": false,"cke_160_uiElement": false,"cke_163_uiElement": false,"cke_167_uiElement": false,"cke_170_uiElement": false}